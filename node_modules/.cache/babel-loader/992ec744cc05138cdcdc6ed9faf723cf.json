{"ast":null,"code":"// export const connectWallet = async () => {\n//   console.log(\"1\")\n//     if (window.ethereum) {\n//       try {\n//         const addressArray = await window.ethereum.request({\n//           method: \"eth_requestAccounts\",\n//         });\n//         const obj = {\n//           status: \"üëÜüèΩ Write a message in the text-field above.\",\n//           address: addressArray[0],\n//         };\n//         return obj;\n//       } catch (err) {\n//         return {\n//           address: \"\",\n//           status: \"üò• \" + err.message,\n//         };\n//       }\n//     } \n//   };\n\nexport const connectWallet = async () => {\n  console.log(\"1\");\n  if (window.ethereum) {\n    try {\n      // Set the network to the Polygon testnet (Mumbai) using the chain ID\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: \"0x13881\"\n        }]\n      });\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const obj = {\n        status: \"üëÜüèΩ Write a message in the text-field above.\",\n        address: addressArray[0]\n      };\n      return obj;\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"üò• \" + err.message\n      };\n    }\n  }\n};\nexport const getCurrentWalletConnected = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n      if (addressArray.length > 0) {\n        return {\n          address: addressArray[0],\n          status: \"üëÜüèΩ Write a message in the text-field above.\"\n        };\n      } else {\n        return {\n          address: \"\",\n          status: \"ü¶ä Connect to Metamask using the top right button.\"\n        };\n      }\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"üò• \" + err.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["connectWallet","console","log","window","ethereum","request","method","params","chainId","addressArray","obj","status","address","err","message","getCurrentWalletConnected","length"],"sources":["C:/Users/SAI CHARAN/OneDrive/Desktop/frontend/src/components/interact.js"],"sourcesContent":["// export const connectWallet = async () => {\n//   console.log(\"1\")\n//     if (window.ethereum) {\n//       try {\n//         const addressArray = await window.ethereum.request({\n//           method: \"eth_requestAccounts\",\n//         });\n//         const obj = {\n//           status: \"üëÜüèΩ Write a message in the text-field above.\",\n//           address: addressArray[0],\n//         };\n//         return obj;\n//       } catch (err) {\n//         return {\n//           address: \"\",\n//           status: \"üò• \" + err.message,\n//         };\n//       }\n//     } \n//   };\n\nexport const connectWallet = async () => {\n  console.log(\"1\");\n  if (window.ethereum) {\n    try {\n      // Set the network to the Polygon testnet (Mumbai) using the chain ID\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x13881\" }],\n      });\n\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const obj = {\n        status: \"üëÜüèΩ Write a message in the text-field above.\",\n        address: addressArray[0],\n      };\n      return obj;\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"üò• \" + err.message,\n      };\n    }\n  }\n};\n\n  export const getCurrentWalletConnected = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        if (addressArray.length > 0) {\n          return {\n            address: addressArray[0],\n            status: \"üëÜüèΩ Write a message in the text-field above.\",\n          };\n        } else {\n          return {\n            address: \"\",\n            status: \"ü¶ä Connect to Metamask using the top right button.\",\n          };\n        }\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"üò• \" + err.message,\n        };\n      }\n    } \n  };"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,aAAa,GAAG,YAAY;EACvCC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChB,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACnB,IAAI;MACF;MACA,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAC5BC,MAAM,EAAE,4BAA4B;QACpCC,MAAM,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAU,CAAC;MACjC,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAG,MAAMN,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QACjDC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMI,GAAG,GAAG;QACVC,MAAM,EAAE,+CAA+C;QACvDC,OAAO,EAAEH,YAAY,CAAC,CAAC;MACzB,CAAC;MACD,OAAOC,GAAG;IACZ,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,OAAO;QACLD,OAAO,EAAE,EAAE;QACXD,MAAM,EAAE,KAAK,GAAGE,GAAG,CAACC;MACtB,CAAC;IACH;EACF;AACF,CAAC;AAEC,OAAO,MAAMC,yBAAyB,GAAG,YAAY;EACnD,IAAIZ,MAAM,CAACC,QAAQ,EAAE;IACnB,IAAI;MACF,MAAMK,YAAY,GAAG,MAAMN,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QACjDC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAIG,YAAY,CAACO,MAAM,GAAG,CAAC,EAAE;QAC3B,OAAO;UACLJ,OAAO,EAAEH,YAAY,CAAC,CAAC,CAAC;UACxBE,MAAM,EAAE;QACV,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACLC,OAAO,EAAE,EAAE;UACXD,MAAM,EAAE;QACV,CAAC;MACH;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ,OAAO;QACLD,OAAO,EAAE,EAAE;QACXD,MAAM,EAAE,KAAK,GAAGE,GAAG,CAACC;MACtB,CAAC;IACH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module"}