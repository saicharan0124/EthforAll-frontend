{"ast":null,"code":"const {\n  ethers\n} = require(\"ethers\");\nasync function Crowdfund_launch(amount, days, token_address) {\n  console.log(days);\n  const Crowdfund_launch_abi = require(\"../abi/Crowdfunding.json\");\n  const Crowdfundaddr = \"0x81e49Fde3A9306c60727a707e1Fa5820671D271B\";\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n  const contract_signer = new ethers.Contract(Crowdfundaddr, Crowdfund_launch_abi, signer);\n  const contract_provider = new ethers.Contract(Crowdfundaddr, Crowdfund_launch_abi, provider);\n  const input0 = \"\" + amount;\n  const decimals0 = \"18\";\n  const amount1 = ethers.utils.parseUnits(input0, decimals0);\n  const submittxn = await contract_signer.launch(amount1, days, token_address, {\n    gasLimit: 210000\n  });\n  //   const confirmtxn  = await contract_signer.confirmTransaction()\n  //   const executetxn  = await contract_signer.executeTransaction()\n\n  const transferEvents = await contract_provider.on('Launch', (id, creator, goal, startedAt, endAt) => {\n    let info = {\n      id: id,\n      creator: creator,\n      goal: goal,\n      startedAt: startedAt,\n      endAt: endAt\n    };\n    temp(info.id);\n  });\n}\n_c = Crowdfund_launch;\nconst temp = info => {\n  localStorage.setItem(\"temp2\", info);\n};\nexport default Crowdfund_launch;\nvar _c;\n$RefreshReg$(_c, \"Crowdfund_launch\");","map":{"version":3,"names":["ethers","require","Crowdfund_launch","amount","days","token_address","console","log","Crowdfund_launch_abi","Crowdfundaddr","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","contract_signer","Contract","contract_provider","input0","decimals0","amount1","utils","parseUnits","submittxn","launch","gasLimit","transferEvents","on","id","creator","goal","startedAt","endAt","info","temp","localStorage","setItem"],"sources":["C:/Users/SAI CHARAN/OneDrive/Desktop/frontend/src/contracts/frontend-interaction/Crowdfund_launch.js"],"sourcesContent":["const { ethers} = require(\"ethers\");\nasync function  Crowdfund_launch(amount,days,token_address){\n\n    console.log(days);\n\n   \n    \n    const Crowdfund_launch_abi = require(\"../abi/Crowdfunding.json\")\n    const Crowdfundaddr = \"0x81e49Fde3A9306c60727a707e1Fa5820671D271B\";\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n\n  const contract_signer = new ethers.Contract(\n    Crowdfundaddr,\n    Crowdfund_launch_abi,\n    signer\n  );\n  const contract_provider = new ethers.Contract(\n    Crowdfundaddr,\n    Crowdfund_launch_abi,\n    provider\n  );\n\n\n  const input0 = \"\"+amount;\n  const decimals0 = \"18\";\n  const amount1 = ethers.utils.parseUnits(input0, decimals0);\n\n  const submittxn =await contract_signer.launch(amount1,days,token_address,{gasLimit: 210000})\n//   const confirmtxn  = await contract_signer.confirmTransaction()\n//   const executetxn  = await contract_signer.executeTransaction()\n\nconst transferEvents = await contract_provider.on('Launch', (id,creator,goal,startedAt,endAt)=>{\n  let info={\n    id:id,\n    creator:creator,\n    goal:goal,\n    startedAt:startedAt,\n    endAt:endAt\n  };\n\n  temp(info.id);\n});\n\n}\n\nconst temp=(info)=>{\n  localStorage.setItem(\"temp2\",info);\n}\n\nexport default Crowdfund_launch;"],"mappings":"AAAA,MAAM;EAAEA;AAAM,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACnC,eAAgBC,gBAAgB,CAACC,MAAM,EAACC,IAAI,EAACC,aAAa,EAAC;EAEvDC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAIjB,MAAMI,oBAAoB,GAAGP,OAAO,CAAC,0BAA0B,CAAC;EAChE,MAAMQ,aAAa,GAAG,4CAA4C;EAElE,MAAMC,QAAQ,GAAG,IAAIV,MAAM,CAACW,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;EACrE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;EAC9C,MAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAS,EAAE;EAEnC,MAAMC,eAAe,GAAG,IAAIlB,MAAM,CAACmB,QAAQ,CACzCV,aAAa,EACbD,oBAAoB,EACpBQ,MAAM,CACP;EACD,MAAMI,iBAAiB,GAAG,IAAIpB,MAAM,CAACmB,QAAQ,CAC3CV,aAAa,EACbD,oBAAoB,EACpBE,QAAQ,CACT;EAGD,MAAMW,MAAM,GAAG,EAAE,GAAClB,MAAM;EACxB,MAAMmB,SAAS,GAAG,IAAI;EACtB,MAAMC,OAAO,GAAGvB,MAAM,CAACwB,KAAK,CAACC,UAAU,CAACJ,MAAM,EAAEC,SAAS,CAAC;EAE1D,MAAMI,SAAS,GAAE,MAAMR,eAAe,CAACS,MAAM,CAACJ,OAAO,EAACnB,IAAI,EAACC,aAAa,EAAC;IAACuB,QAAQ,EAAE;EAAM,CAAC,CAAC;EAC9F;EACA;;EAEA,MAAMC,cAAc,GAAG,MAAMT,iBAAiB,CAACU,EAAE,CAAC,QAAQ,EAAE,CAACC,EAAE,EAACC,OAAO,EAACC,IAAI,EAACC,SAAS,EAACC,KAAK,KAAG;IAC7F,IAAIC,IAAI,GAAC;MACPL,EAAE,EAACA,EAAE;MACLC,OAAO,EAACA,OAAO;MACfC,IAAI,EAACA,IAAI;MACTC,SAAS,EAACA,SAAS;MACnBC,KAAK,EAACA;IACR,CAAC;IAEDE,IAAI,CAACD,IAAI,CAACL,EAAE,CAAC;EACf,CAAC,CAAC;AAEF;AAAC,KA7Ce7B,gBAAgB;AA+ChC,MAAMmC,IAAI,GAAED,IAAI,IAAG;EACjBE,YAAY,CAACC,OAAO,CAAC,OAAO,EAACH,IAAI,CAAC;AACpC,CAAC;AAED,eAAelC,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}